{
  "schema": {
    "targetNamespace": "http://www.openarchives.org/OAI/2.0/",
    "xmlns": "http://www.w3.org/2001/XMLSchema",
    "xmlns:oai": "http://www.openarchives.org/OAI/2.0/",
    "elementFormDefault": "qualified",
    "attributeFormDefault": "unqualified",
    "annotation": {"documentation": "\n    XML Schema which can be used to validate replies to all OAI-PMH \n    v2.0 requests. Herbert Van de Sompel, 2002-05-13.\n    Validated with XML Spy v.4.3 on 2002-05-13.\n    Validated with XSV 1.203.2.45/1.106.2.22 on 2002-05-13.\n    Added definition of protocolVersionType instead of using anonymous \n    type. No change of function. Simeon Warner, 2004-03-29.\n    Tightened definition of UTCdatetimeType to enforce the restriction \n    to UTC Z notation. Simeon Warner, 2004-09-14.\n    Corrected pattern matches for setSpecType and metadataPrefixType\n    to agree with protocol specification. Simeon Warner, 2004-10-12.\n    Spelling correction. Simeon Warner, 2008-12-07.\n    $Date: 2004/10/12 15:20:29 $\n    "},
    "element": {
      "name": "OAI-PMH",
      "type": "oai:OAI-PMHtype"
    },
    "complexType": [
      {
        "name": "OAI-PMHtype",
        "sequence": {
          "element": [
            {
              "name": "responseDate",
              "type": "dateTime"
            },
            {
              "name": "request",
              "type": "oai:requestType"
            }
          ],
          "choice": {
            "element": [
              {
                "name": "error",
                "type": "oai:OAI-PMHerrorType",
                "maxOccurs": "unbounded"
              },
              {
                "name": "Identify",
                "type": "oai:IdentifyType"
              },
              {
                "name": "ListMetadataFormats",
                "type": "oai:ListMetadataFormatsType"
              },
              {
                "name": "ListSets",
                "type": "oai:ListSetsType"
              },
              {
                "name": "GetRecord",
                "type": "oai:GetRecordType"
              },
              {
                "name": "ListIdentifiers",
                "type": "oai:ListIdentifiersType"
              },
              {
                "name": "ListRecords",
                "type": "oai:ListRecordsType"
              }
            ]
          }
        }
      },
      {
        "name": "requestType",
        "annotation": {"documentation": "Define requestType, indicating the protocol request that \n      led to the response. Element content is BASE-URL, attributes are arguments \n      of protocol request, attribute-values are values of arguments of protocol \n      request"},
        "simpleContent": {
          "extension": {
            "base": "anyURI",
            "attribute": [
              {
                "name": "verb",
                "type": "oai:verbType",
                "use": "optional"
              },
              {
                "name": "identifier",
                "type": "oai:identifierType",
                "use": "optional"
              },
              {
                "name": "metadataPrefix",
                "type": "oai:metadataPrefixType",
                "use": "optional"
              },
              {
                "name": "from",
                "type": "oai:UTCdatetimeType",
                "use": "optional"
              },
              {
                "name": "until",
                "type": "oai:UTCdatetimeType",
                "use": "optional"
              },
              {
                "name": "set",
                "type": "oai:setSpecType",
                "use": "optional"
              },
              {
                "name": "resumptionToken",
                "type": "string",
                "use": "optional"
              }
            ]
          }
        }
      }
    ],
    "simpleType": {
      "name": "verbType",
      "restriction": {
        "base": "string",
        "enumeration": [
          {"value": "Identify"},
          {"value": "ListMetadataFormats"},
          {"value": "ListSets"},
          {"value": "GetRecord"},
          {"value": "ListIdentifiers"},
          {"value": "ListRecords"}
        ]
      }
    },
    "complexType#1": {
      "name": "OAI-PMHerrorType",
      "simpleContent": {
        "extension": {
          "base": "string",
          "attribute": {
            "name": "code",
            "type": "oai:OAI-PMHerrorcodeType",
            "use": "required"
          }
        }
      }
    },
    "simpleType#1": {
      "name": "OAI-PMHerrorcodeType",
      "restriction": {
        "base": "string",
        "enumeration": [
          {"value": "cannotDisseminateFormat"},
          {"value": "idDoesNotExist"},
          {"value": "badArgument"},
          {"value": "badVerb"},
          {"value": "noMetadataFormats"},
          {"value": "noRecordsMatch"},
          {"value": "badResumptionToken"},
          {"value": "noSetHierarchy"}
        ]
      }
    },
    "complexType#2": [
      {
        "name": "IdentifyType",
        "sequence": {
          "element": [
            {
              "name": "repositoryName",
              "type": "string"
            },
            {
              "name": "baseURL",
              "type": "anyURI"
            },
            {
              "name": "protocolVersion",
              "type": "oai:protocolVersionType"
            },
            {
              "name": "adminEmail",
              "type": "oai:emailType",
              "maxOccurs": "unbounded"
            },
            {
              "name": "earliestDatestamp",
              "type": "oai:UTCdatetimeType"
            },
            {
              "name": "deletedRecord",
              "type": "oai:deletedRecordType"
            },
            {
              "name": "granularity",
              "type": "oai:granularityType"
            },
            {
              "name": "compression",
              "type": "string",
              "minOccurs": 0,
              "maxOccurs": "unbounded"
            },
            {
              "name": "description",
              "type": "oai:descriptionType",
              "minOccurs": 0,
              "maxOccurs": "unbounded"
            }
          ]
        }
      },
      {
        "name": "ListMetadataFormatsType",
        "sequence": {
          "element": {
            "name": "metadataFormat",
            "type": "oai:metadataFormatType",
            "maxOccurs": "unbounded"
          }
        }
      },
      {
        "name": "ListSetsType",
        "sequence": {
          "element": [
            {
              "name": "set",
              "type": "oai:setType",
              "maxOccurs": "unbounded"
            },
            {
              "name": "resumptionToken",
              "type": "oai:resumptionTokenType",
              "minOccurs": 0
            }
          ]
        }
      },
      {
        "name": "GetRecordType",
        "sequence": {
          "element": {
            "name": "record",
            "type": "oai:recordType"
          }
        }
      },
      {
        "name": "ListRecordsType",
        "sequence": {
          "element": [
            {
              "name": "record",
              "type": "oai:recordType",
              "maxOccurs": "unbounded"
            },
            {
              "name": "resumptionToken",
              "type": "oai:resumptionTokenType",
              "minOccurs": 0
            }
          ]
        }
      },
      {
        "name": "ListIdentifiersType",
        "sequence": {
          "element": [
            {
              "name": "header",
              "type": "oai:headerType",
              "maxOccurs": "unbounded"
            },
            {
              "name": "resumptionToken",
              "type": "oai:resumptionTokenType",
              "minOccurs": 0
            }
          ]
        }
      },
      {
        "name": "recordType",
        "annotation": {"documentation": "A record has a header, a metadata part, and\n        an optional about container"},
        "sequence": {
          "element": [
            {
              "name": "header",
              "type": "oai:headerType"
            },
            {
              "name": "metadata",
              "type": "oai:metadataType",
              "minOccurs": 0
            },
            {
              "name": "about",
              "type": "oai:aboutType",
              "minOccurs": 0,
              "maxOccurs": "unbounded"
            }
          ]
        }
      },
      {
        "name": "headerType",
        "annotation": {"documentation": "A header has a unique identifier, a datestamp,\n        and setSpec(s) in case the item from which\n        the record is disseminated belongs to set(s).\n        the header can carry a deleted status indicating\n        that the record is deleted."},
        "sequence": {
          "element": [
            {
              "name": "identifier",
              "type": "oai:identifierType"
            },
            {
              "name": "datestamp",
              "type": "oai:UTCdatetimeType"
            },
            {
              "name": "setSpec",
              "type": "oai:setSpecType",
              "minOccurs": 0,
              "maxOccurs": "unbounded"
            }
          ]
        },
        "attribute": {
          "name": "status",
          "type": "oai:statusType",
          "use": "optional"
        }
      }
    ],
    "simpleType#2": [
      {
        "name": "identifierType",
        "restriction": {"base": "anyURI"}
      },
      {
        "name": "statusType",
        "restriction": {
          "base": "string",
          "enumeration": {"value": "deleted"}
        }
      }
    ],
    "complexType#3": [
      {
        "name": "metadataType",
        "annotation": {"documentation": "Metadata must be expressed in XML that complies\n       with another XML Schema (namespace=#other). Metadata must be \n       explicitly qualified in the response."},
        "sequence": {
          "any": {
            "namespace": "##other",
            "processContents": "strict"
          }
        }
      },
      {
        "name": "aboutType",
        "annotation": {"documentation": "Data \"about\" the record must be expressed in XML\n      that is compliant with an XML Schema defined by a community."},
        "sequence": {
          "any": {
            "namespace": "##other",
            "processContents": "strict"
          }
        }
      },
      {
        "name": "resumptionTokenType",
        "annotation": {"documentation": "A resumptionToken may have 3 optional attributes\n       and can be used in ListSets, ListIdentifiers, ListRecords\n       responses."},
        "simpleContent": {
          "extension": {
            "base": "string",
            "attribute": [
              {
                "name": "expirationDate",
                "type": "dateTime",
                "use": "optional"
              },
              {
                "name": "completeListSize",
                "type": "positiveInteger",
                "use": "optional"
              },
              {
                "name": "cursor",
                "type": "nonNegativeInteger",
                "use": "optional"
              }
            ]
          }
        }
      },
      {
        "name": "descriptionType",
        "annotation": {"documentation": "The descriptionType is used for the description\n      element in Identify and for setDescription element in ListSets.\n      Content must be compliant with an XML Schema defined by a \n      community."},
        "sequence": {
          "any": {
            "namespace": "##other",
            "processContents": "strict"
          }
        }
      }
    ],
    "simpleType#3": [
      {
        "name": "UTCdatetimeType",
        "annotation": {"documentation": "Datestamps are to either day (type date)\n      or to seconds granularity (type oai:UTCdateTimeZType)"},
        "union": {"memberTypes": "date oai:UTCdateTimeZType"}
      },
      {
        "name": "UTCdateTimeZType",
        "restriction": {
          "base": "dateTime",
          "pattern": {"value": ".*Z"}
        }
      },
      {
        "name": "protocolVersionType",
        "restriction": {
          "base": "string",
          "enumeration": {"value": 2}
        }
      },
      {
        "name": "emailType",
        "restriction": {
          "base": "string",
          "pattern": {"value": "\\S+@(\\S+\\.)+\\S+"}
        }
      },
      {
        "name": "deletedRecordType",
        "restriction": {
          "base": "string",
          "enumeration": [
            {"value": "no"},
            {"value": "persistent"},
            {"value": "transient"}
          ]
        }
      },
      {
        "name": "granularityType",
        "restriction": {
          "base": "string",
          "enumeration": [
            {"value": "YYYY-MM-DD"},
            {"value": "YYYY-MM-DDThh:mm:ssZ"}
          ]
        }
      }
    ],
    "complexType#4": {
      "name": "metadataFormatType",
      "sequence": {
        "element": [
          {
            "name": "metadataPrefix",
            "type": "oai:metadataPrefixType"
          },
          {
            "name": "schema",
            "type": "anyURI"
          },
          {
            "name": "metadataNamespace",
            "type": "anyURI"
          }
        ]
      }
    },
    "simpleType#4": {
      "name": "metadataPrefixType",
      "restriction": {
        "base": "string",
        "pattern": {"value": "[A-Za-z0-9\\-_\\.!~\\*'\\(\\)]+"}
      }
    },
    "complexType#5": {
      "name": "setType",
      "sequence": {
        "element": [
          {
            "name": "setSpec",
            "type": "oai:setSpecType"
          },
          {
            "name": "setName",
            "type": "string"
          },
          {
            "name": "setDescription",
            "type": "oai:descriptionType",
            "minOccurs": 0,
            "maxOccurs": "unbounded"
          }
        ]
      }
    },
    "simpleType#5": {
      "name": "setSpecType",
      "restriction": {
        "base": "string",
        "pattern": {"value": "([A-Za-z0-9\\-_\\.!~\\*'\\(\\)])+(:[A-Za-z0-9\\-_\\.!~\\*'\\(\\)]+)*"}
      }
    }
  }
}
